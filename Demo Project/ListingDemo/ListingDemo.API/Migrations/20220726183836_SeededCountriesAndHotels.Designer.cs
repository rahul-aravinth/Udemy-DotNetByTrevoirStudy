// <auto-generated />
using ListingDemo.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ListingDemo.API.Migrations
{
    [DbContext(typeof(ListingDBContext))]
    [Migration("20220726183836_SeededCountriesAndHotels")]
    partial class SeededCountriesAndHotels
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ListingDemo.API.Data.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "India",
                            ShortName = "IN"
                        },
                        new
                        {
                            Id = 2,
                            Name = "China",
                            ShortName = "CN"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Russia",
                            ShortName = "RS"
                        });
                });

            modelBuilder.Entity("ListingDemo.API.Data.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Chennai",
                            CountryId = 1,
                            Name = "A2B",
                            Rating = 8.0
                        },
                        new
                        {
                            Id = 2,
                            Address = "Shanghai",
                            CountryId = 2,
                            Name = "Fairmont Peace Hotel",
                            Rating = 10.0
                        },
                        new
                        {
                            Id = 3,
                            Address = "Morskaya Ulitsa",
                            CountryId = 3,
                            Name = "Angleterre Hotel",
                            Rating = 10.0
                        });
                });

            modelBuilder.Entity("ListingDemo.API.Data.Hotel", b =>
                {
                    b.HasOne("ListingDemo.API.Data.Country", "Country")
                        .WithMany("Hotels")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("ListingDemo.API.Data.Country", b =>
                {
                    b.Navigation("Hotels");
                });
#pragma warning restore 612, 618
        }
    }
}
